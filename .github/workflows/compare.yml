name: Version Compare

on:
  workflow_dispatch:

jobs:
  compare-versions:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      # 检出代码到工作空间

    - name: Install jq
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
      # 安装 jq 工具用于 JSON 解析
      # 调试: 确保 jq 安装成功
      # 输出: jq 的版本号
      - run: jq --version

    - name: Clone Remote Repository
      run: git clone https://activitypub.software/TransFem-org/Sharkey.git
      # 克隆远程仓库
      # 调试: 在克隆后列出文件，确保目录存在
      - run: ls Sharkey

    - name: Print package.json
      run: cat Sharkey/package.json
      # 打印 package.json 内容，以确保格式正确

    - name: Get Version from Remote package.json
      id: remote_version
      run: |
        version=$(jq -r '.version' Sharkey/package.json)
        echo "remote_version=$version" >> $GITHUB_ENV
        echo "Extracted version: $version"
      # 提取并打印版本号
      # 输出: 提取的版本号

    - name: Get Docker Latest Digest
      id: docker_digest
      run: |
        repository="juneink/sharkey"
        response=$(curl -s "https://hub.docker.com/v2/repositories/$repository/tags/")
        echo "Docker Hub response: $response"
        latest_info=$(echo "$response" | jq -r '.results[] | select(.name=="latest")')
        echo "Latest tag info: $latest_info"
        digest=$(echo "$latest_info" | jq -r '.images[0].digest')
        echo "latest_digest=$digest" >> $GITHUB_ENV
        echo "Extracted digest: $digest"
      # 调试: 打印 Docker Hub API 响应和提取的 digest 信息

    - name: Get Version from Docker Latest Digest
      id: docker_version
      run: |
        repository="juneink/sharkey"
        response=$(curl -s "https://hub.docker.com/v2/repositories/$repository/tags/")
        echo "Docker Hub response: $response"
        latest_tag=$(echo "$response" | jq -r --arg digest "$digest" '.results[] | select(.images[0].digest==$digest) | .name')
        echo "docker_version=$latest_tag" >> $GITHUB_ENV
        echo "Extracted Docker version: $latest_tag"
      # 调试: 打印 Docker Hub API 响应和提取的版本号

    - name: Compare Versions
      run: |
        echo "Remote package.json version: ${{ env.remote_version }}"
        echo "Docker latest version: ${{ env.docker_version }}"
        if [ "${{ env.remote_version }}" != "${{ env.docker_version }}" ]; then
          echo "版本不同，本地 version 文件已更新为远程版本。"
        else
          echo "本地 version 文件与远程版本一致，无需更新。"
        fi
      # 比较版本并输出结果
